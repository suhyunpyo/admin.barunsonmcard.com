@model CategoryDisplayViewModel
@{
    Layout = "_Layout2";
}
<div class="container-fluid">
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">메인 상품 진열관리</h6>
        </div>
        <div class="card-body">
            <form method="get" asp-action="MainDisplayList" id="frmSearch">
                <div class="table-responsive">
                    <table class="table table-bordered" width="100%" cellspacing="0">
                        <tbody>
                            <tr class="trSize">
                                <td class="tdSize">카테고리</td>
                                <td>
                                    @for (var i = 0; i < Model.Categories.Count(); i++)
                                    {
                                        <input type="radio" asp-for="Category" value="@Model.Categories[i].Value" class="form-control-sm ml-2 categoryselect" />
                                        @Model.Categories[i].Text
                                    }
                                    <input type="hidden" asp-for="Category" />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="container-fluid">
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <div class="row">
                <div class="font-weight-bold text-primary col-6">
                    진열 목록
                </div>
                <div class="col">
                    <h6 class="m-0 font-weight-bold text-primary text-right">
                        <a asp-action="CategoryDisplayDelete" asp-route-id="@Model.Category" class="d-none d-sm-inline-block btn btn-sm btn-secondary2 shadow-sm btndelete">진열안함</a>
                        <a asp-action="PopupProductSearch" asp-route-id="@Model.Category" class="d-none d-sm-inline-block btn btn-sm btn-secondary2 shadow-sm btnadd">상품추가</a>
                        <a asp-action="CategoryDisplayUpdate" asp-route-id="@Model.Category" class="d-none d-sm-inline-block btn btn-sm btn-secondary2 shadow-sm btnupdate">순서저장</a>
                        <a asp-action="MainDisplayExcel" asp-route-id="@Model.Category" class="d-none d-sm-inline-block btn btn-sm btn-secondary2 shadow-sm">엑셀 다운로드</a>
                    </h6>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive ">
                <table id="tbdisplayitems" class="table table-bordered " width="100%" cellspacing="0" style="text-align: center">
                    <thead>
                        <tr>
                            <th class="text-nowrap">
                                <input type="checkbox" class="chkall" value="ALL" />
                            </th>
                            <th class="text-nowrap">이미지</th>
                            <th class="text-nowrap">브랜드</th>
                            <th class="text-nowrap">대분류</th>
                            <th class="text-nowrap">상품명</th>
                            <th class="text-nowrap">제품코드</th>
                            <th class="text-nowrap" style="min-width:8.8em;">진열순서</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.DisplayItems)
                        {
                            var className = "";
                            if (!item.DisplayYN)
                                className = "bg-yellow";
                            <tr class="@className">
                                <td class="tdCenter">
                                    <input type="checkbox" class="chkdelete" data-itemid="@item.Product_ID" />
                                </td>
                                <td class="tdCenter">
                                    <img src="@item.Main_ImageAbsoluteUri" style="height: 50px;" />
                                </td>
                                <td class="tdLeft">
                                    @item.ProductBarndName
                                </td>
                                <td class="tdLeft">
                                    @item.CategoryName
                                </td>
                                <td class="tdLeft">
                                    @item.Product_Name
                                </td>
                                <td class="tdCenter" style="text-decoration: underline;">
                                    <a asp-action="Edit" asp-controller="ProductRegist" asp-route-id="@item.Product_ID" target="_blank">@item.Product_Code</a>
                                </td>
                                <td class="tdCenter">

                                    <input type="number" min="1" max="1000" name="sort" value="@item.Sort" data-itemid="@item.Product_ID"
                                           class="form-control" style="max-width: 50px; padding: 0.2rem; margin: 0 auto;" />
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
            <div class="mt-5">
                <h6>도움말</h6>
                <hr>
                <ul class="adviceUl">
                    <li>
                        1.&nbsp;&nbsp;노란 배경색이 표시된 상품은 미진열 상품입니다.
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <!-- 적용상품 확인/선택 팝업 -->
    <div class="modal fade" id="productCheck" tabindex="-1" aria-labelledby="productCheck" aria-hidden="true" style="display: none;">
        <div class="modal-dialog" role="document" style=" max-width:80%; max-height:80%;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">상품추가</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
            </div>
        </div>
    </div>
    <!-- 적용상품 확인/선택 팝업 -->
</div>

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("input:checkbox.chkall").prop("checked", $("input:checkbox.chkdelete").length == $("input:checkbox.chkdelete:checked").length);

        });
        //카테고리 선택
        $("body").on("change", ".categoryselect:radio", function () {
            $("#frmSearch").submit();
        });

        //Check box control
        $("body").on("click", "input:checkbox.chkall", function () {
            $("input:checkbox.chkdelete").prop("checked", this.checked);
        });
        $("body").on("click", "input:checkbox.chkdelete", function () {
            $("input:checkbox.chkall").prop("checked", $("input:checkbox.chkdelete").length == $("input:checkbox.chkdelete:checked").length);
        });
        $("body").on("click", "#chkBrandAll", function () {
            $("[name^=ProductBarnds]").prop("checked", this.checked);
        });
        $("body").on("click", "[name^=ProductBarnds]", function () {
            $("#chkBrandAll").prop("checked", $("input:checkbox[name^=ProductBarnds]").length == $("input:checkbox[name^=ProductBarnds]:checked").length);
        });
        //End - Check box control

        //Button Control
        //진열안함
        $("a.btndelete").click(function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            var ids = [];
            $("input.chkdelete:checkbox").each(function (index, item) {
                if ($(item).is(":checked")) {
                    ids.push(parseInt($(item).attr('data-itemid')));
                }
            });
            if (ids.length > 0) {
                var result = confirm('선택한 상품을 진열안함(미진열)로 변경하시겠습니까?\n변경시 목록에서 삭제됩니다.');
                if (result) {
                    $.ajax({
                        url: url,
                        method: 'POST',
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        data: JSON.stringify(ids)
                    }).done(function (data, textStatus, jqXHR) {
                        if (data['status'] == true) {
                            //페이지 다시 읽기
                            location.reload();
                        } else {
                            var errors = data['message'];
                            alert(errors);
                        }
                    });
                }
            } else {
                alert('상품을 선택하세요.');
            }
        });

        //상품추가
        $("a.btnadd").click(function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            $.ajax({
                url: url,
                method: 'GET'
            }).done(function (data, textStatus, jqXHR) {
                ModalDataBind(data);
                $("#productCheck").modal("show");
            });
        });
        $("body").on("click", "#aProductSearchInit", function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            $.ajax({
                url: url,
                method: 'GET'
            }).done(function (data, textStatus, jqXHR) {
                ModalDataBind(data);
            });
        });

        //모달 상품검색에서 추가
        $("body").on("click", "a.btnprodadd", function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            var ids = [];
            $("input.chkaddproduct:checkbox").each(function (index, item) {
                if ($(item).is(":checked")) {
                    ids.push(parseInt($(item).attr('data-itemid')));
                }
            });
            if (ids.length > 0) {
                $.ajax({
                    url: url,
                    method: 'POST',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(ids)
                }).done(function (data, textStatus, jqXHR) {
                    if (data['status'] == true) {
                        //페이지 다시 읽기
                        location.reload();
                    } else {
                        var errors = data['message'];
                        alert(errors);
                    }
                });
            } else {
                alert('상품을 선택하세요.');
            }
        });
        //순서저장
        $("a.btnupdate").click(function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            var prods = new Object();
            $("#tbdisplayitems input[type=number][name=sort]").each(function (index, item) {
                prods[$(item).attr('data-itemid')] = $(item).val();
                //prods.push({ Key: $(item).attr('data-itemid'), Value: $(item).val() });
            });
            $.ajax({
                url: url,
                method: 'POST',
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                data: JSON.stringify(prods)
            }).done(function (data, textStatus, jqXHR) {
                if (data['status'] == true) {
                    alert("저장 되었습니다.");
                    //페이지 다시 읽기
                    location.reload();
                } else {
                    var errors = data['message'];
                    alert(errors);
                }
            });
        });
        //End - Button Control

        //Model - Product Search
        //모달창의 폼 제출
        $("body").on("submit", '#frmProductSearch', function (e) {
            e.preventDefault();

            var form = $(this);
            var url = form.attr('action');

            $.ajax({
                cache: false,
                url: url,
                type: 'GET',
                data: form.serialize()
            }).done(function (data, textStatus, jqXHR) {
                ModalDataBind(data);
            });
        });
        //모달창의 페이지 이동
        $("body").on("click", '#productCheck a.page-link', function (e) {
            e.preventDefault();
            var url = $(this).attr('href');
            $.ajax({
                url: url,
                method: 'GET'
            }).done(function (data, textStatus, jqXHR) {
                ModalDataBind(data);
            });
        });

        function ModalDataBind(data) {
            $("#productCheck div.modal-body").html(data);
            $("#chkBrandAll").prop("checked", $("input:checkbox[name^=ProductBarnds]").length == $("input:checkbox[name^=ProductBarnds]:checked").length);
        }

        //End - Model - Product Search
    </script>
}